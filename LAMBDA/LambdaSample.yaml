# To deploy this template, run the following command from the yaml directory:
# aws cloudformation deploy --template-file LambdaSample.yaml --parameter-overrides EnvName=dev LambdaHandlerPath=lambda_function.lambda_handler  FunctionS3Bucket=test-simple-s3-bck FunctionS3Key=my-deployment-package.zip --capabilities CAPABILITY_NAMED_IAM --stack-name lambda-sample-test

AWSTemplateFormatVersion: '2010-09-09'
Description: Template for Lambda Sample.
Parameters:
  EnvName:
    Type: String
    Description: Name of an environment. 'dev', 'staging', 'prod' and any name.
    AllowedPattern: ^.*[^0-9]$
    ConstraintDescription: Must end with non-numeric character.
  LambdaHandlerPath:  
    Type: String
    Description: Path of a Lambda Handler. 
    AllowedPattern: ^.*[^0-9]$
    ConstraintDescription: Must end with non-numeric character.
  FunctionS3Bucket:  
    Type: String
    Description: Path of the function s3 bucket. 
    AllowedPattern: ^.*[^0-9]$
    ConstraintDescription: Must end with non-numeric character.
  FunctionS3Key:
    Type: String
    Description: Path of the function s3 key.
    AllowedPattern: ^.*[^0-9]$  
    ConstraintDescription: Must end with non-numeric character. 
Outputs:
  LambdaRoleARN:
    Description: Role for Lambda execution.
    Value:
      Fn::GetAtt:
        - LambdaRole
        - Arn
    Export:
      Name:
        Fn::Sub: LambdaRole
  LambdaFunctionName:
    Value:
      Ref: LambdaFunction
  LambdaFunctionARN:
    Description: Lambda function ARN.
    Value:
      Fn::GetAtt:
        - LambdaFunction
        - Arn
    Export:
      Name:
        Fn::Sub: LambdaARN-${EnvName}
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
      Path: /
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Sub: lambda-function-${EnvName}
      Description: Python 3.8 Lambda Function
      Runtime: python3.8
      Code:
        S3Bucket: !Ref FunctionS3Bucket
        S3Key: !Ref FunctionS3Key
      Handler: !Ref LambdaHandlerPath
      MemorySize: 128
      Timeout: 10
      Role: # Here we get the Arn attribute from the LambdaRole resource.
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Environment:
        Variables:
          ENV: # Here we substitute the ENV variable value for the EnvName parameter.
            Fn::Sub: ${EnvName}
          TZ: UTC